name: Tests

on:
  pull_request:

  push:
    branches:
      - main

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:

    strategy:
      matrix:
        go-version:
          - '1.13'
          - '1.14'
          - '1.15'
          - '1.16'
          - '1.17'

        operating-system:
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'

    runs-on: ${{ matrix.operating-system }}
    name: 'Go ${{ matrix.go-version }}: Test on ${{ matrix.operating-system }}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v3
        id: mod-cache
        with:
          path: ~/go/pkg/mod
          key: os-${{ matrix.operating-system }}-go-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: os-${{ matrix.operating-system }}-go-

      - name: Install dependencies
        if: steps.mod-cache.outputs.cache-hit != 'true'
        run: go mod download

      - name: Run tests
        timeout-minutes: 10
        run: go test ./...

  code-coverage:
    needs:
      - test

    runs-on: 'ubuntu-latest'
    name: 'Code coverage'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install dependencies
        run: go mod download

      - name: Calculate coverage
        timeout-minutes: 10
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.out
          flags: unittests
          fail_ci_if_error: true
          verbose: false
